<?phpnamespace AtlantisGroup\OrmAG\Entity;use AtlantisGroup\OrmAG\Service\ServiceInterface;/** * @property mixed $id The ID of the entity */abstract class AbstractEntity implements EntityInterface{    /**     * @var ServiceInterface     */    protected ServiceInterface $service;    /**     * @var EntityInterface     */    protected EntityInterface $wrapped;    /**     * @var mixed     */    protected mixed $uuid;    /**     * @param ServiceInterface $service     */    public function __construct(ServiceInterface $service)    {        $this->uuid = uniqid(str_replace('\\', '-', get_class($this)) . '-', true);        $this->service = $service;    }    /**     * @return ServiceInterface     */    public function getService(): ServiceInterface    {        if (!isset($this->wrapped)) {            return $this->service;        } else {            return $this->wrapped->getService();        }    }    public function jsonSerialize()    {        if (!isset($this->wrapped)) {        } else {        }    }}